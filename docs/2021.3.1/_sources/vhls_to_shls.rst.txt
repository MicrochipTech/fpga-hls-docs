.. _vhls_to_shls:

SmartHLS Migration Guide
==================================

This section describes how existing Vitis HLS / Vivado HLS designs can be
easily migrated to SmartHLS.
When migrating an existing C++ design from Vitis HLS / Vivado HLS, the pragmas
and libraries used in the source code should be changed to the equivalent ones
in SmartHLS.

Pragmas
--------------------------------------

=======================  ==============================
Vitis HLS / Vivado HLS   SmartHLS
=======================  ==============================
aggregate, data_pack      See the :ref:`pragma_memory_impl_pack_argument` and :ref:`pragma_memory_impl_pack_variable` pragmas.
allocation                | A global constraint of operation resources can be set via :ref:`set_resource_constraint`;
                            constraining the operation resource within a function, a loop or a block of code is not yet available.
                          | Functions that are not inlined (automatically by SmartHLS tool or specified via the :ref:`pragma_function_inline`
                            pragma) always have a single RTL module instance in hardware, and it is shared by all callers.
                            Replication of a function instance in hardware can be achieved by the :ref:`pragma_function_replicate` and :ref:`pragma_function_inline` pragmas.
                            In the case of :ref:`multi-threading<pthreads_multithreading>`, each thread of a function creates an instance of
                            the corresponding RTL module.
array_partition           See the :ref:`pragma_memory_partition_argument` and :ref:`pragma_memory_partition_variable` pragmas. The cyclic, block, factor, and dim options are not yet supported.
dataflow                  :ref:`function_pipelining` and :ref:`Multi-threading<pthreads_multithreading>` can be used to implement a task-level (dataflow) pipeline.
disaggregate              See the ``struct_fields`` option of the :ref:`pragma_memory_partition_argument` pragma.
expression_balance        See :ref:`LATENCY_REDUCTION` TCL settings to control the expression balance optimization.
function_instantiate      The equivalent optimization can be achieved with the :ref:`pragma_function_inline` pragma or C++ template functions.
inline                    See the :ref:`pragma_function_inline` pragma.
interface                 See :ref:`rtl_interface` for details about supported interfaces and corresponding pragmas.
pipeline                  See :ref:`pragma_function_pipeline` and :ref:`pragma_loop_pipeline` pragmas.
stable                    See the ``stable`` option of the :ref:`pragma_interface_scalar_argument` pragma.
stream                    Streaming interface is implemented via the :ref:`rtl_interface_fifo_argument`.
top                       See the :ref:`pragma_function_top` pragma.
unroll                    See the :ref:`pragma_loop_unroll` pragma.
=======================  ==============================

The following Vitis/Vivado HLS pragmas do not have an equivalent support in
SmartHLS yet: array_map, array_reshape, bind_op, bind_storage, dependence,
disaggregate, latency, loop_flatten, loop_merge, loop_tripcount, occurrence,
protocol, reset, shared.

Libraries
--------------------------------------

Arbitrary Precision Data Types
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Similar to Vitis/Vivado HLS, SmartHLS provides :ref:`ap_int` and :ref:`ap_fixpt`.

Streaming Library
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Similar to the ``hls::stream`` template class in Vitis/Vivado HLS, SmartHLS
provides a ``hls::fifo`` template class in the :ref:`streaming_lib`.

Math Library
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SmartHLS supports a subset of functions in the :ref:`c_math_library`, but does
not yet have a math function library that is optimized for hardware
implementation with customizable arbitrary precisions.

Other Libraries
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Other libraries such as OpenCV, FFT, FIR, DDS, and SRL libraries are not yet
supported by SmartHLS. We are actively developing libraries, such as the
computer vision IPs.
If you are interested in having support of certain IPs, please email us at
SmartHLS@microchip.com. Your feedback is valuable to us and will help to
prioritize our production plan.

.. IP Library
.. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. 
.. SmartHLS does not yet have an IP library.
.. Vitis offers FFT, FIR, DDS, SRL library.









.
